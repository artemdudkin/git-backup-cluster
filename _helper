#!/bin/bash

#@1 = string
#@echo trimed string
function trim() { 
	echo "$1" | sed -e 's/^[[:space:]]*//' | sed -e 's/[[:space:]]*$//';
}

#@1 = string
#@echo lowercase string
function toLowerCase() { 
	echo "$1" | tr '[:upper:]' '[:lower:]'
}

#Reads props form file where lines looks like ID="centos"
#@1 = filepath
#@2 = prop name
#@3 = key-value delimiter
#@echo prop value
function read_prop_from_file_or_string() { 
	local delimiter=$3
	if [ -z $delimiter ]; then delimiter="="; fi

	if [ -f "$1" ] ; then
		while IFS="$delimiter" read -r key value
		do
			local key=$(trim "$key")
			local value=$(trim "$value")
			value=$(toLowerCase "$value")
			if [ ! -z "${key}" ] && [ "${key}" == "$2" ] ; then 
				ret=$(echo "$value" | sed -e 's/^"*//' | sed -e 's/"*$//')
			fi
		done < "$1"
	fi
	echo $ret
}

#@echo operation system id
function get_os_id() { 
	local id=$(read_prop_from_file_or_string "/etc/os-release" "ID")
	if [ -z "$id" ]; then
		lsb_release -a > ./.tmp
		id=$(read_prop_from_file_or_string "./.tmp" "Distributor ID" ":")
		rm -f ./.tmp
	fi
	echo $id
}

#@1 = filepath
#@changes file
function delete_trailing_blank_lines_at_end_of_file { 
	local newfile="./.tmp_del"
	sed -e :a -e '/^\n*$/{$d;N;};/\n$/ba' $1 > $newfile
	mv $newfile $1
}