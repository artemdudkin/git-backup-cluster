#!/bin/bash

command=$1

if [ "$command" == "clear" ]; then
	if [ -z $2 ]; then printf "Removes ^M at files from windows\n\n  Usage: $0 clear <filename>\n\n"; exit; fi
	#removes ^M at files from windows
	sed -i -e 's/\r$//' "$2"
	exit
fi

if [ "$command" == "install" ]; then
	#create symlink to this file from ~/bin
	mkdir -p ~/bin
	echo 'export PATH="$HOME/bin:$PATH' >> ~/.bashrc #to allow ubuntu run scripts from ~/bin
	ln -s "$(realpath $0)" ~/bin/gbc
	exit
fi

if [ "$command" == "gitolite" ] && [ $2 == "install" ]; then
	git_user=$3; if [ -z $git_user ]; then git_user="git"; fi
	~/git-backup-cluster/_gitolite_install $git_user
	if [ $? != 0 ] ; then exit; fi
	~/git-backup-cluster/_clone_self $git_user
	exit
fi

if [ "$command" == "gitolite" ] && [ $2 == "add" ] && [ $3 == "user" ]; then
	user=$4
	keypath=$5
	~/git-backup-cluster/_gitolite_add_user $user $keypath
	exit
fi

if [ "$command" == "gitolite" ] && [ $2 == "grant" ]; then
	repo=$3
	user=$4
	perm=$5
	~/git-backup-cluster/_gitolite_grant $repo $user $perm
	exit
fi

#fallback messages
if [ -z "$command" ]; then 
	printf "\n  Usage: $0 <command> [<param1>] [<param2>] ...\n\n" 
	exit 
fi
printf "\n  ERROR: Unknown command '$*'\n\n"
exit

